version: '2.1'
services:

  sc-nginx-build:
    image: nginx:1.15
    container_name: sc-nginx-build
    restart: on-failure
    networks:
      sc-build-net:
        aliases:
          - nginx
    environment:
      - TZ=UTC
    expose:
      - 80

  sc-smtp-build:
    build:
      context: docker_smtp
    image: sah/sc-smtp-build:${SC_ENV}
    container_name: sc-smtp-build
    restart: on-failure
    environment:
      AWS_REGION: "us-east-1"
      SMTP_USERNAME: ${SC_SMTP_USERNAME}
      SMTP_PASSWORD: ${SC_SMTP_PASSWORD}
    networks:
      sc-build-net:
        aliases:
          - smtp
          - mail
    expose:
      - 25

  sc-mysql-build:
    build:
      context: docker_mysql
    image: sah/sc-mysql-build:${SC_ENV}
    container_name: sc-mysql-build
    restart: on-failure
    environment:
      MYSQL_DATABASE: "squirrelcart"
      MYSQL_USER: "squirrelcart"
      MYSQL_PASSWORD: "squirrelcart"
      MYSQL_ROOT_PASSWORD: "root"
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    volumes:
      - /tmp/sc/mysql_build_data:/var/lib/mysql
    networks:
      sc-build-net:
        aliases:
          - db
          - mysql
    expose:
      - 3306

  sc-app-build:
    depends_on:
      - sc-smtp-build
      - sc-mysql-build
    build:
      context: docker_squirrelcart
    image: sah/sc-app-build:${SC_ENV}
    container_name: sc-app-build
    environment:
      - APACHE_SERVER_NAME=hh-app.${SC_ENV}.hoffman-house.com
    restart: on-failure
    networks:
      sc-build-net:
        aliases:
          - squirrelcart
          - app
    ports:
      - 8080:8080
      - 8443:8443

  # For deploying static html like amishscooters.com
  sc-s3-website-build:
    container_name: sc-s3-website-build
    image: sah/sc-s3-website-build:${SC_ENV}
    #command: "http-server -p 8080"
    #command: echo "build complete"
    command: /usr/src/static/wait_for_deploy.sh
    build:
      context: docker_s3_website
      args:
        SC_ENV: ${SC_ENV}
        SC_AWS_REGION: ${SC_AWS_REGION}
        AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
        AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
        AWS_DEFAULT_REGION: ${SC_AWS_REGION}
    environment:
      SC_ENV: ${SC_ENV}
      SC_AWS_REGION: ${SC_AWS_REGION}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_DEFAULT_REGION: ${SC_AWS_REGION}
    ports:
      - 8000:8000
    networks:
      sc-build-net:
        aliases:
          - sc-s3-website-build

networks:
  sc-build-net:
    driver: bridge
